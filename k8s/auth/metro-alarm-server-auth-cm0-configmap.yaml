apiVersion: v1
data:
  2024_07_26_1656-2e0797256e03_initialization.py: "\"\"\"initialization\n\nRevision ID: 2e0797256e03\nRevises: \nCreate Date: 2024-07-26 16:56:48.867001\n\n\"\"\"\nfrom typing import Sequence, Union\n\nfrom alembic import op\nimport sqlalchemy as sa\n\n\n# revision identifiers, used by Alembic.\nrevision: str = '2e0797256e03'\ndown_revision: Union[str, None] = None\nbranch_labels: Union[str, Sequence[str], None] = None\ndepends_on: Union[str, Sequence[str], None] = None\n\n\ndef upgrade() -> None:\n    # ### commands auto generated by Alembic - please adjust! ###\n    op.create_table('users',\n    sa.Column('id', sa.Integer(), nullable=False),\n    sa.Column('username', sa.String(length=32), nullable=False),\n    sa.Column('email', sa.String(length=64), nullable=False),\n    sa.Column('hashed_password', sa.String(length=1024), nullable=False),\n    sa.Column('is_active', sa.Boolean(), server_default='true', nullable=False),\n    sa.Column('is_superuser', sa.Boolean(), server_default='false', nullable=False),\n    sa.Column('is_verified', sa.Boolean(), server_default='false', nullable=False),\n    sa.PrimaryKeyConstraint('id'),\n    sa.UniqueConstraint('id')\n    )\n    # ### end Alembic commands ###\n\n\ndef downgrade() -> None:\n    # ### commands auto generated by Alembic - please adjust! ###\n    op.drop_table('users')\n    # ### end Alembic commands ###\n"
  2024_07_27_1557-e83390f2b642_updated_users_table.py: |
    """updated users table

    Revision ID: e83390f2b642
    Revises: 2e0797256e03
    Create Date: 2024-07-27 15:57:19.874588

    """
    from typing import Sequence, Union

    from alembic import op
    import sqlalchemy as sa


    # revision identifiers, used by Alembic.
    revision: str = 'e83390f2b642'
    down_revision: Union[str, None] = '2e0797256e03'
    branch_labels: Union[str, Sequence[str], None] = None
    depends_on: Union[str, Sequence[str], None] = None


    def upgrade() -> None:
        # ### commands auto generated by Alembic - please adjust! ###
        op.alter_column('users', 'username',
                   existing_type=sa.VARCHAR(length=32),
                   type_=sa.String(length=255),
                   existing_nullable=False)
        op.alter_column('users', 'email',
                   existing_type=sa.VARCHAR(length=64),
                   type_=sa.String(length=320),
                   existing_nullable=False)
        op.create_unique_constraint(None, 'users', ['id'])
        # ### end Alembic commands ###


    def downgrade() -> None:
        # ### commands auto generated by Alembic - please adjust! ###
        op.drop_constraint(None, 'users', type_='unique')
        op.alter_column('users', 'email',
                   existing_type=sa.String(length=320),
                   type_=sa.VARCHAR(length=64),
                   existing_nullable=False)
        op.alter_column('users', 'username',
                   existing_type=sa.String(length=255),
                   type_=sa.VARCHAR(length=32),
                   existing_nullable=False)
        # ### end Alembic commands ###
kind: ConfigMap
metadata:
  labels:
    io.kompose.service: metro-alarm-server-auth
  name: metro-alarm-server-auth-cm0
