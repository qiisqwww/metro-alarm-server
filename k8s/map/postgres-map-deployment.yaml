apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: C:\Users\dima-\utils\kompose.exe -f .\docker-compose\docker-compose.map.yml convert -o ./manifests/
    kompose.version: 1.35.0 (9532ceef3)
  labels:
    io.kompose.service: postgres-map
  name: postgres-map
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: postgres-map
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: C:\Users\dima-\utils\kompose.exe -f .\docker-compose\docker-compose.map.yml convert -o ./manifests/
        kompose.version: 1.35.0 (9532ceef3)
      labels:
        io.kompose.service: postgres-map
    spec:
      containers:
        - env:
            - name: POSTGRES_DB
              valueFrom:
                configMapKeyRef:
                  key: POSTGRES_DB
                  name: postgres_map-database-env
            - name: POSTGRES_PASSWORD
              valueFrom:
                configMapKeyRef:
                  key: POSTGRES_PASSWORD
                  name: postgres_map-database-env
            - name: POSTGRES_USER
              valueFrom:
                configMapKeyRef:
                  key: POSTGRES_USER
                  name: postgres_map-database-env
          image: postgres:16.1-alpine3.19
          livenessProbe:
            exec:
              command:
                - pg_isready
            failureThreshold: 5
            periodSeconds: 10
            timeoutSeconds: 5
          name: postgres-map
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: postgres-map-claim0
            - mountPath: /etc/postgresql/postgresql.conf
              name: postgres-map-claim1
      restartPolicy: Always
      volumes:
        - name: postgres-map-claim0
          persistentVolumeClaim:
            claimName: postgres-map-claim0
        - name: postgres-map-claim1
          persistentVolumeClaim:
            claimName: postgres-map-claim1
